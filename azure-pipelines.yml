jobs:
- job:
  displayName: Linux
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'

  steps:
  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda info -a
      conda create -q -n test-environment python=$PYTHON_VERSION numpy scipy ffmpeg pyfftw
    displayName: Set up Anaconda environment

  - bash: |
      source activate test-environment
      pip install pytest pytest-azurepipelines
      pip install ".[dev]"
    displayName: Install HCIPy

  - bash: |
      source activate test-environment
      python --version
      python -c "import numpy; print('Numpy', numpy.__version__)"
      python -c "import scipy; print('Scipy', scipy.__version__)"
      python -c "import matplotlib; print('Matplotlib', matplotlib.__version__)"
      python -c "import hcipy; print('HCIPy', hcipy.__version__)"
      conda list
    displayName: Print package versions

  - bash: |
      source activate test-environment
      python -m coverage run -m pytest ./tests -ra --junitxml=junit/unit-test.xml
    displayName: Run tests

  - bash: |
      source activate test-environment
      curl -s https://codecov.io/bash | bash
    displayName: Upload test results to codecov.io

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'junit/*.xml'
    condition: succeededOrFailed()

- job:
  displayName: MacOS
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda installation

  - bash: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda info -a
      conda create -q -n test-environment python=$PYTHON_VERSION numpy scipy ffmpeg pyfftw
    displayName: Set up Anaconda environment

  - bash: |
      source activate test-environment
      pip install pytest pytest-azurepipelines
      pip install ".[dev]"
    displayName: Install HCIPy

  - bash: |
      source activate test-environment
      python --version
      python -c "import numpy; print('Numpy', numpy.__version__)"
      python -c "import scipy; print('Scipy', scipy.__version__)"
      python -c "import matplotlib; print('Matplotlib', matplotlib.__version__)"
      python -c "import hcipy; print('HCIPy', hcipy.__version__)"
      conda list
    displayName: Print package versions

  - bash: |
      source activate test-environment
      coverage run -m pytest ./tests -ra --junitxml=junit/unit-test.xml
    displayName: Run tests

  - bash: |
      source activate test-environment
      curl -s https://codecov.io/bash | bash
    displayName: Upload test results to codecov.io

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'junit/*.xml'
    condition: succeededOrFailed()

- job:
  displayName: Windows
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'

  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda info -a
      conda create -q -n test-environment python=%PYTHON_VERSION% numpy scipy ffmpeg pyfftw
    displayName: Set up Anaconda environment

  - script: |
      call activate test-environment
      pip install pytest pytest-azurepipelines
      pip install ".[dev]"
    displayName: Install HCIPy

  - script: |
      call activate test-environment
      python --version
      python -c "import numpy; print('Numpy', numpy.__version__)"
      python -c "import scipy; print('Scipy', scipy.__version__)"
      python -c "import matplotlib; print('Matplotlib', matplotlib.__version__)"
      python -c "import hcipy; print('HCIPy', hcipy.__version__)"
      conda list
    displayName: Print package versions

  - script: |
      call activate test-environment
      coverage run -m pytest ./tests -ra --junitxml=junit/unit-test.xml
    displayName: Run tests

  - bash: |
      source activate test-environment
      curl -s https://codecov.io/bash | bash
    displayName: Upload test results to codecov.io

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'junit/*.xml'
    condition: succeededOrFailed()

- job:
  displayName: Documentation
  pool:
    vmImage: ubuntu-latest

  steps:
  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda info -a
      conda create -q -n test-environment python=$PYTHON_VERSION numpy scipy ffmpeg pyfftw
    displayName: Set up Anaconda environment

  - bash: |
      source activate test-environment
      sudo apt-get -y install pandoc
      pip install awscli
      pip install ".[doc]"
    displayName: Install HCIPy

  - bash: |
      source activate test-environment
      python --version
      python -c "import numpy; print('Numpy', numpy.__version__)"
      python -c "import scipy; print('Scipy', scipy.__version__)"
      python -c "import matplotlib; print('Matplotlib', matplotlib.__version__)"
      python -c "import hcipy; print('HCIPy', hcipy.__version__)"
      conda list
    displayName: Print package versions

  - bash: |
      source activate test-environment
      cd doc
      make html
    displayName: Build documentation

  - bash:
      aws s3 sync --acl public-read --delete --cache-control max-age=86400,public ./doc/_build/html s3://docs.hcipy.org/dev
    displayName: Upload documentation to website
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
